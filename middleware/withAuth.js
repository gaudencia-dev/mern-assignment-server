const jwt = require('jsonwebtoken')
const secret = process.env.JWT_SECRET

// This middleware will check to see if the client holds a valid token
// generated by this server.
const withAuth = function(req, res, next) {
    // The token is defined as the cookie named token sent in the request
    // headers by the client
    const token = req.cookies.token

    if (!token) {
        // If no 'token' cookie is found in the request headers send an Unauthorised HTTP response
        res.status(401).send('Unauthorized: No token provided') 
    } else {
        jwt.verify(token, secret, function(err, decoded) {
            // If there is some error in the verification of the token e.g. the secret
            // used to encrypt the token was not the secret we use in generating tokens
            // it must be a dodgy token, so send an Unauthorised HTTP response
            if(err || decoded.student_id != req.body._id) {
                res.status(401).send('Unauthorized: Invalid token')
            } else {
            // If a valid token is provided, move to the next middleware.
                next()
            }
        })
    }
}

module.exports = withAuth
